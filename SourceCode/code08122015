; SLIME 2013-06-26
CL-USER> ; compiling (DEFUN RIOTA ...)
CL-USER> (riota 10)

(10 9 8 7 6 5 4 3 2 1)
CL-USER> (atom 4)
T
CL-USER> (consp 4)
NIL
CL-USER> (atom '(1 2))
NIL
CL-USER> (consp '(1 2))
T
CL-USER> (consp '())
NIL
CL-USER> (atom '())
T
CL-USER> (integerp 12.2)
NIL
CL-USER> (numberp 12.2)
T
CL-USER> (stringp 'rouge)
NIL
CL-USER> (stringp "rouge")
T
CL-USER> '(1 2 3 4 5 6)
(1 2 3 4 5 6)
CL-USER> (defparameter *l* '(1 2 3 4 5 6))
*L*
CL-USER> (butlast *l*)
(1 2 3 4 5)
CL-USER> (butlast *l* 3)
(1 2 3)
CL-USER> (butlast *l* 2)
(1 2 3 4)
CL-USER> (subst 70 3 *l*)
(1 2 70 4 5 6)
CL-USER> (adjoin 2 '())
(2)
CL-USER> (defparameter *l1* (riota 4))
*L1*
CL-USER> (union *l* *l1*)
(6 5 4 3 2 1)
CL-USER> (member 3 *l*)
(3 4 5 6)
CL-USER> (member -4 '((4 . 6) (7 . 2) (5 . 6) (3 . 5)))
NIL
CL-USER> (member -4 '((4 . 6) (7 . 2) (5 . 6) (3 . 5)) :key #'cdr)
NIL
CL-USER> (member -4 '((4 . 6) (7 . 2) (5 . -4) (3 . 5)) :key #'cdr)
((5 . -4) (3 . 5))
CL-USER> (nth 0 *l*)
1
CL-USER> *l*
(1 2 3 4 5 6)
CL-USER> (remove 5 *l*)
(1 2 3 4 6)
CL-USER> (remove 5 (append *l* *l*))
(1 2 3 4 6 1 2 3 4 6)
CL-USER> (remove-duplicates (append *l* *l*))
(1 2 3 4 5 6)
CL-USER> (fact 4)

; in: FACT 4
;     (FACT 4)
; 
; caught STYLE-WARNING:
;   undefined function: FACT
; 
; compilation unit finished
;   Undefined function:
;     FACT
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN FACT ...)

; file: /tmp/fileKWHXMi
; in: DEFUN FACT
;     (* N (FACT (1- N)))
; ==>
;   N
; 
; note: deleting unreachable code
; 
; compilation unit finished
;   printed 1 note
; compiling (DEFUN FACT ...)

; file: /tmp/fileyP7Slp
; in: DEFUN FACT
;     (* N (FACT (1- N)))
; ==>
;   N
; 
; note: deleting unreachable code
; 
; compilation unit finished
;   printed 1 note
; compiling (DEFUN FACT ...); Evaluation aborted on #<UNDEFINED-FUNCTION FACT {1003B6B113}>.
CL-USER> (fact 150)

; compiling (DEFUN FACT ...)
; compiling (DEFUN FACT ...)57133839564458545904789328652610540031895535786011264182548375833179829124845398393126574488675311145377107878746854204162666250198684504466355949195922066574942592095735778929325357290444962472405416790722118445437122269675520000000000000000000000000000000000000
CL-USER> 
CL-USER> 
CL-USER> (fact 100)

CL-USER> (fact 100)

93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000
CL-USER> (time (fact 100))
Evaluation took:
  0.000 seconds of real time
  0.000077 seconds of total run time (0.000070 user, 0.000007 system)
  100.00% CPU
  62,042 processor cycles
  0 bytes consed
  
93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000
CL-USER> (trace fact)
(FACT)
CL-USER> (fact 5)
  0: (FACT 5)
  0: FACT returned 120
120
CL-USER> (time (defparameter *r* (iota 10000)))

Evaluation took:
  0.001 seconds of real time
  0.000931 seconds of total run time (0.000751 user, 0.000180 system)
  100.00% CPU
  2,122,683 processor cycles
  327,680 bytes consed
  
*R*
CL-USER> (time (defparameter *r* (iota-q 10000)))
Evaluation took:
  0.001 seconds of real time
  0.000900 seconds of total run time (0.000726 user, 0.000174 system)
  100.00% CPU
  2,205,192 processor cycles
  491,520 bytes consed
  
*R*
CL-USER> (+ 1 2 3 4 5)
15
CL-USER> (funcall #'+ 1 2 3 4 5)
15
CL-USER> (funcall (lambda (x) (* x x x)) 9)
729
CL-USER> (funcall (complement #'<) 5 4)
T
CL-USER> (apply (complement #'<) '(5 4))
T
CL-USER> (apply (complement #'<) 4 '(5))
NIL
CL-USER> (apply (complement #'<) 5 '(4))
T
CL-USER> (reduce #'cons '(1 2 3 4))
(((1 . 2) . 3) . 4)
CL-USER> (reduce #'cons '(1 2 3 4) :from-end t)
(1 2 3 . 4)
CL-USER> (reduce #'cons '(1 2 3 4 nil) :from-end t)
(1 2 3 4)
CL-USER> (reduce #'cons '(1 2 3 4) :from-end t :inital-value nil)
; Evaluation aborted on #<SB-INT:SIMPLE-PROGRAM-ERROR "unknown &KEY argument: ~S" {100724B043}>.
CL-USER> (reduce #'cons '(1 2 3 4) :from-end t :initial-value nil)
(1 2 3 4)
CL-USER> (mapcar (lambda (x) (* x x) '( 1 2 3 4 5)))
; Evaluation aborted on #<SB-INT:SIMPLE-PROGRAM-ERROR "invalid number of arguments: ~S" {1002C233C3}>.
CL-USER> (mapcar (lambda (x) (* x x)) '( 1 2 3 4 5))
(1 4 9 16 25)
CL-USER> (mapcar (lambda (x y) (* x y)) '(1 2 3 4 5) '(9 8 7 4 5 6))
(9 16 21 16 25)
CL-USER> (mapcar (lambda (x y) (cons x y)) '(1 2 3 4 5) '(a b c d e))
((1 . A) (2 . B) (3 . C) (4 . D) (5 . E))
CL-USER> (mapcar #'+ '(1 2 3) '(4 5 6) '(7 8 9))
(12 15 18)
CL-USER> (mapcan (lambda (x) (list x (1+ x))) '(1 2 3))
(1 2 2 3 3 4)
CL-USER> (mapcar (lambda (x) (list x (1+ x))) '(1 2 3))
((1 2) (2 3) (3 4))
CL-USER> (defparameter *al* '((blue . bleu) (red . rouge)))
*AL*
CL-USER> *al*
((BLUE . BLEU) (RED . ROUGE))
CL-USER> (member 'rouge *al* :key #'car)
NIL
CL-USER> (member 'red *al* :key #'car)
((RED . ROUGE))
CL-USER> (assoc 'red *al*)
(RED . ROUGE)
CL-USER> (cdr (assoc 'red *al*))
ROUGE
CL-USER> (cdr (assoc 'yellow *al*))
NIL
CL-USER> (defparameter *chiffres* '(("un" . 1) ("deux" . 2)))
*CHIFFRES*
CL-USER> *chiffres*
(("un" . 1) ("deux" . 2))
CL-USER> (assoc "deux" *chiffres*)
NIL
CL-USER> (assoc "deux" *chiffres* :test #'equal)
("deux" . 2)
CL-USER> 